// <auto-generated />
using BAUST_Book_Store.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BAUST_Book_Store.Migrations
{
    [DbContext(typeof(BookExchangeDbContext))]
    [Migration("20250927160550_2nd-Migration")]
    partial class _2ndMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BAUST_Book_Store.Models.Domain.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("author_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("bookPrice")
                        .HasColumnType("float");

                    b.Property<string>("book_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("edition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img_Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAvilable")
                        .HasColumnType("bit");

                    b.Property<double>("rentPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Abcdefg-abcfged-abcdeg",
                            author_Name = "XYZ",
                            bookPrice = 120.25,
                            book_Name = "Harry Poter",
                            condition = "Good",
                            edition = "4th edition",
                            img_Url = "Localhost://123.jpg",
                            isAvilable = true,
                            rentPrice = 25.25
                        },
                        new
                        {
                            Id = 2,
                            Description = "Abcdefg-abcfged-abcdeg",
                            author_Name = "XYZ",
                            bookPrice = 120.25,
                            book_Name = "Harry Wolf",
                            condition = "Good",
                            edition = "4th edition",
                            img_Url = "Localhost://123.jpg",
                            isAvilable = true,
                            rentPrice = 25.25
                        },
                        new
                        {
                            Id = 3,
                            Description = "Abcdefg-abcfged-abcdeg",
                            author_Name = "XYZ",
                            bookPrice = 120.25,
                            book_Name = "Harry Big",
                            condition = "Good",
                            edition = "4th edition",
                            img_Url = "Localhost://123.jpg",
                            isAvilable = true,
                            rentPrice = 25.25
                        },
                        new
                        {
                            Id = 4,
                            Description = "Abcdefg-abcfged-abcdeg",
                            author_Name = "XYZ",
                            bookPrice = 120.25,
                            book_Name = "Harry Karl",
                            condition = "Good",
                            edition = "4th edition",
                            img_Url = "Localhost://123.jpg",
                            isAvilable = true,
                            rentPrice = 25.25
                        },
                        new
                        {
                            Id = 5,
                            Description = "Abcdefg-abcfged-abcdeg",
                            author_Name = "XYZ",
                            bookPrice = 120.25,
                            book_Name = "Harry Gen",
                            condition = "Good",
                            edition = "4th edition",
                            img_Url = "Localhost://123.jpg",
                            isAvilable = true,
                            rentPrice = 25.25
                        });
                });

            modelBuilder.Entity("BAUST_Book_Store.Models.Domain.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
